<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UllnnovationHub.ToolKIt;component/Themes/ColorStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Combox基础样式  -->
    <Style x:Key="BaseComBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="White" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--  ComBoxItem  -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22">
                    </Setter>
                    <Setter Property="MinWidth" Value="60">
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back" Background="Transparent" BorderThickness="0,0,0,0">
                                    <ContentPresenter Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    </ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource ThemeColor}">
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource ThemeColor}">
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource GrayColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="grid" Grid.Column="0">
                                <ToggleButton Width="{Binding ElementName=grid, Path=ActualWidth}" Height="{Binding ElementName=grid, Path=ActualHeight}" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{TemplateBinding Background}" BorderThickness="0" ClickMode="Press" Content="{TemplateBinding Text}" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                            <TextBlock Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>

                            <Grid Grid.Column="1">
                                <ToggleButton ClickMode="Press" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <Grid>
                                                                <TextBlock x:Name="arrow_tb" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Text="∨">
                                                                    <TextBlock.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform />
                                                                            <SkewTransform />
                                                                            <RotateTransform />
                                                                            <TranslateTransform />
                                                                        </TransformGroup>
                                                                    </TextBlock.RenderTransform>
                                                                </TextBlock>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <EventTrigger RoutedEvent="Checked">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="180" />
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>

                                                            <EventTrigger RoutedEvent="Unchecked">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="180" />
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Popup x:Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide">
                                <Border x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="2" Opacity="0.5" ShadowDepth="0" Color="Black" />
                                    </Border.Effect>
                                    <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="4,6,4,6" CanContentScroll="True" HorizontalScrollBarVisibility="Auto" SnapsToDevicePixels="True" Style="{DynamicResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                                        <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                                        <StackPanel Background="White" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  圆角、阴影、卡片边框的Combox  -->
    <Style x:Key="RoundedCardComBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="White" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--  ComBoxItem  -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22">
                    </Setter>
                    <Setter Property="MinWidth" Value="60">
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back" Background="Transparent" BorderThickness="0,0,0,0">
                                    <ContentPresenter Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    </ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource ThemeColor}">
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="{StaticResource ThemeColor}">
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="grid" Grid.Column="0">
                                <ToggleButton Width="{Binding ElementName=grid, Path=ActualWidth}" Height="{Binding ElementName=grid, Path=ActualHeight}" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{TemplateBinding Background}" BorderThickness="0" ClickMode="Press" Content="{TemplateBinding Text}" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                            <TextBlock Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Background" Value="LightGray" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>

                            <Grid Grid.Column="1">
                                <ToggleButton ClickMode="Press" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <Grid>
                                                                <TextBlock x:Name="arrow_tb" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Text="∨">
                                                                    <TextBlock.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform />
                                                                            <SkewTransform />
                                                                            <RotateTransform />
                                                                            <TranslateTransform />
                                                                        </TransformGroup>
                                                                    </TextBlock.RenderTransform>
                                                                </TextBlock>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <EventTrigger RoutedEvent="Checked">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="180" />
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>

                                                            <EventTrigger RoutedEvent="Unchecked">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="180" />
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Popup x:Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide">
                                <Border x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" CornerRadius="1" SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="2" Opacity="0.5" ShadowDepth="0" Color="Black" />
                                    </Border.Effect>
                                    <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="4,6,4,6" CanContentScroll="True" HorizontalScrollBarVisibility="Auto" SnapsToDevicePixels="True" Style="{DynamicResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                                        <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                                        <StackPanel Background="White" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Opacity="0.3" ShadowDepth="-1" Color="#FF969696" />
                        </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBox}" BasedOn="{StaticResource BaseComBoxStyle}" TargetType="{x:Type ComboBox}" />
</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:UllnnovationHub.ToolKIt.UI">

    <Style x:Key="ImgButton" TargetType="{x:Type local:ImageButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="BorderCornerRadius" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding BorderCornerRadius}">
                        <StackPanel VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{TemplateBinding Background}" Orientation="{TemplateBinding Orientation}">
                            <Image x:Name="PART_Image" Width="{TemplateBinding ImgWidth}" Height="{TemplateBinding ImgHeight}" Margin="{TemplateBinding ImgTextMargin}" Source="{TemplateBinding ImgSource}" />
                            <TextBlock x:Name="PART_TextBlock" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{TemplateBinding TextContent}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImageButton}}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding MousePressedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImageButton}}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImgButtonWithoutTextContent" TargetType="{x:Type local:ImageButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Border x:Name="borderWithoutTextContent" Width="50" Height="50" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="30">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                            <Path x:Name="pathWithoutTextContent" Width="20" Height="20" VerticalAlignment="Center" Data="M 0,100  Q 35,140  54,190 Q 100,45  168,0 S 90,40  50,150 Q 40,136 0,100 Z" Fill="black" SnapsToDevicePixels="True" Stretch="Fill" Stroke="LimeGreen" StrokeThickness="2" UseLayoutRounding="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderWithoutTextContent" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImageButton}}}" />
                            <Setter TargetName="pathWithoutTextContent" Property="Width" Value="25" />
                            <Setter TargetName="pathWithoutTextContent" Property="Height" Value="25" />
                            <Setter TargetName="borderWithoutTextContent" Property="BorderThickness" Value="2" />
                            <Setter TargetName="borderWithoutTextContent" Property="BorderBrush" Value="orange" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="borderWithoutTextContent" Property="Background" Value="{Binding MousePressedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImageButton}}}" />
                            <Setter TargetName="pathWithoutTextContent" Property="Stroke" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UllnnovationHub.ToolKIt;component/Themes/ColorStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="ListViewItem.Static.Background" Color="#FFFCFCFC" />
    <SolidColorBrush x:Key="ListViewItem.Static.Border" Color="#eaeaea" />
    <SolidColorBrush x:Key="ListViewItem.MouseOver.Background" Color="#f4f4f4" />
    <SolidColorBrush x:Key="ListViewItem.MouseOver.Border" Color="#eaeaea" />
    <SolidColorBrush x:Key="ListViewItem.SelectedActive.Background" Color="#deecf9" />
    <SolidColorBrush x:Key="ListViewItem.SelectedActive.Border" Color="#eaeaea" />
    <SolidColorBrush x:Key="ListViewItem.SelectedInactive.Background" Color="#eaeaea" />
    <SolidColorBrush x:Key="ListViewItem.SelectedInactive.Border" Color="#eaeaea" />


    <SolidColorBrush x:Key="ListBorder" Color="#c8c8c8" />
    <SolidColorBrush x:Key="ListView.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListView.Static.Border" Color="#c8c8c8" />
    <SolidColorBrush x:Key="ListView.MouseOver.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListView.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ListView.Disabled.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListView.Disabled.Border" Color="#FFD9D9D9" />


    <Style x:Key="BaseListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource ListView.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListView.Static.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <!--
            Foreground跟随系统主题的变化而变化，
            在浅色主题下，这个颜色通常是深色（接近黑色）
            在深色主题下，这个颜色通常是浅色（接近白色）
        -->
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListView.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListView.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BaseListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <StackPanel Orientation="Horizontal" SnapsToDevicePixels="True">
                        <Border x:Name="border" Width="3" VerticalAlignment="Stretch" Background="{DynamicResource ThemeColor}" Visibility="Hidden" />
                        <Border x:Name="Bd" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListViewItem.MouseOver.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListViewItem.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListViewItem.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListViewItem.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListViewItem.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListViewItem.SelectedActive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  应用全局样式变化  -->
    <Style x:Key="{x:Type ListView}" BasedOn="{StaticResource BaseListViewStyle}" TargetType="{x:Type ListView}" />
    <Style x:Key="{x:Type ListViewItem}" BasedOn="{StaticResource BaseListViewItemStyle}" TargetType="{x:Type ListViewItem}" />



</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UllnnovationHub.ToolKIt;component/Themes/ColorStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="CheckBox.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="CheckBox.Border" Color="#737373" />
    <SolidColorBrush x:Key="CheckBox.Glyph" Color="White" />
    <SolidColorBrush x:Key="CheckBox.MouseOver.Background" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="CheckBox.MouseOver.Border" Color="Black" />
    <SolidColorBrush x:Key="CheckBox.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="CheckBox.Disabled.Border" Color="#FFBCBCBC" />

    <Style x:Key="BaseCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource CheckBox.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource CheckBox.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Margin="1,6,1,6" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" Width="16" Height="16" Margin="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">

                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Margin="3" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource CheckBox.Glyph}" Stretch="Fill" />
                                <Rectangle x:Name="indeterminateMark" Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{Binding ElementName=checkBoxBorder, Path=BorderBrush}" Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="6,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource CheckBox.MouseOver.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource CheckBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource CheckBox.Disabled.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource CheckBox.Disabled.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource ThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource ThemeColor}" />
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource ThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource ThemeColor}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  应用全局样式变化  -->
    <Style x:Key="{x:Type CheckBox}" BasedOn="{StaticResource BaseCheckBoxStyle}" TargetType="{x:Type CheckBox}" />
</ResourceDictionary>